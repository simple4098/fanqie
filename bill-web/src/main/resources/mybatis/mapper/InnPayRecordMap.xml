<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tomasky.bill.mapper.RecordMapper">

	<update id="balanceOrders" parameterType="com.tomasky.bill.bo.param.bill.BalanceBo">
		<include refid="balance_orders_sql"/>
	</update>

	<!-- 根据条件查询支付流水 -->
	<select id="getPayRecords" parameterType="com.tomasky.bill.bo.param.bill.PayRecordBo" resultMap="payRecordMap">
		<include refid="find_pay_record_sql"/>
		ORDER BY p.pay_at DESC
	</select>

	<!-- 根据条件查询支付流水总览 -->
	<select id="countPayRecords" parameterType="com.tomasky.bill.bo.param.bill.PayRecordBo" resultType="com.tomasky.bill.vo.count.PayRecordCount">
		<include refid="count_pay_record_sql"/>
	</select>

	<!-- 根据条件查询番茄代收记录 -->
	<select id="getSettlementRecords" parameterType="com.tomasky.bill.bo.param.bill.PayRecordBo" resultMap="payRecordMap">
		<include refid="find_settlement_record_sql"/>
		ORDER BY p.inn_id DESC, p.is_balance DESC, p.pay_at DESC
	</select>

	<!-- 根据条件查询番茄代收总体情况 -->
	<select id="countSettlementRecords" parameterType="com.tomasky.bill.bo.param.bill.PayRecordBo" resultType="com.tomasky.bill.vo.count.CountVo">
		SELECT sum(t.p1) as totalOrderNum,sum(t.p2) as totalAmount,sum(t.p3) as paidAmount,sum(t.p4) as poundageAmount
		,sum(t.p5) as unliqOrderNum,sum(t.p6) as unliqAmount,sum(t.p7) as unliqPaidAmount,sum(t.p8) as unliqPoundageAmount
		FROM (
			<include refid="count_settle_records_sql"/>
		) t
	</select>

	<!-- 根据条件查询有番茄代收记录的客栈信息 -->
	<select id="getSettlementInns" parameterType="com.tomasky.bill.bo.param.bill.PayRecordBo" resultMap="innInfoMap">
		<include refid="find_settlement_inn_sql"/>
		ORDER BY i.id DESC
	</select>

	<!-- 根据条件查询联盟对账单信息 -->
	<select id="getUnionStatements" parameterType="com.tomasky.bill.bo.param.bill.UnionBo" resultType="com.tomasky.bill.vo.bill.UnionStatementVo">
		<include refid="find_union_statements_sql"/>
		ORDER BY u.id ASC
	</select>

	<!-- 根据条件查询联盟对账单信息 -->
	<select id="getOrderStatements" parameterType="com.tomasky.bill.bo.param.bill.UnionBo" resultType="com.tomasky.bill.vo.bill.MainOrderVo">
		<include refid="find_order_statements_sql"/>
		ORDER BY m.id DESC
	</select>

	<select id="getOrderStatementsCount" parameterType="com.tomasky.bill.bo.param.bill.UnionBo" resultType="java.lang.Long">
		SELECT count(t.id) as num FROM (
			<include refid="find_order_statements_sql"/>
		) t
	</select>

	<select id="getSettlementInnsCount" parameterType="com.tomasky.bill.bo.param.bill.PayRecordBo" resultType="java.lang.Long">
		SELECT count(t.id) as num FROM (
			<include refid="find_settlement_inn_sql"/>
		) t
	</select>

	<select id="getSettlementRecordsCount" parameterType="com.tomasky.bill.bo.param.bill.PayRecordBo" resultType="java.lang.Long">
		SELECT count(t.id) as num FROM (
			<include refid="find_settlement_record_sql"/>
		) t
	</select>

	<select id="getPayRecordsCount" parameterType="com.tomasky.bill.bo.param.bill.PayRecordBo" resultType="java.lang.Long">
		SELECT count(t.id) as num FROM (
			<include refid="find_pay_record_sql"/>
		) t
	</select>

	<sql id="find_pay_record_sql">
		select i."name" as inn_name,i.id as pms_inn_id,p.product_code,p.order_code,p.trade_no,p.pay_mode,p.pay_type,p.pay_desc,p.deduct_price
		,p.poundage_ratio,p.commission_ratio,p.pay_price,p.pay_at,p.is_balance,p.id,p.settle_at,p.balance_at,i.region_id
		from tomato_pay_record p
		inner join tomato_inn i on p.inn_id = i.id
		<include refid="pay_record_filter_sql"/>
	</sql>

	<sql id="pay_record_filter_sql">
		<where>
			<choose>
				<when test="from != null and timeType == 'settleAt'">and p.settle_at &gt;= #{from}</when>
				<when test="from != null and timeType == 'payAt'">and p.pay_at &gt;= #{from}</when>
				<when test="from != null and timeType == 'balanceAt'">and p.balance_at &gt;= #{from}</when>
				<otherwise>and p.pay_at &gt;= #{from}</otherwise>
			</choose>
			<choose>
				<when test="to != null and timeType == 'settleAt'">and p.settle_at &lt;= #{to}</when>
				<when test="to != null and timeType == 'payAt'">and p.pay_at &lt;= #{to}</when>
				<when test="to != null and timeType == 'balanceAt'">and p.balance_at &lt;= #{to}</when>
				<otherwise>and p.pay_at &lt;= #{to}</otherwise>
			</choose>
			<if test="innId != null">
				and p.inn_id = #{innId}
			</if>
			<if test="productCode != null and productCode != ''">
				and p.product_code = #{productCode}
			</if>
			<if test="payType != null and payType != ''">
				and p.pay_type = #{payType}
			</if>
			<if test="orderNo != null and orderNo != ''">
				and p.order_code = #{orderNo}
			</if>
			<if test="tradeNo != null and tradeNo != ''">
				and p.trade_no = #{tradeNo}
			</if>
			<if test="receiptType != null">
				AND p.receipt_type = #{receiptType}
			</if>
			<if test="status != null">  <!-- 防止查询出已经有过退款的支付记录 -->
				AND p.is_balance &gt;= #{status}
			</if>
			<if test="isBalance != null">
				AND p.is_balance = #{isBalance}
			</if>
			<if test="innName != null and innName != ''">
				and i.name LIKE '%'||#{innName}||'%'
			</if>
		</where>
	</sql>

	<sql id="update_filter_sql">
		<where>
			<choose>
				<when test="from != null and timeType == 'settleAt'">and settle_at &gt;= #{from}</when>
				<when test="from != null and timeType == 'payAt'">and pay_at &gt;= #{from}</when>
				<when test="from != null and timeType == 'balanceAt'">and balance_at &gt;= #{from}</when>
				<otherwise>and pay_at &gt;= #{from}</otherwise>
			</choose>
			<choose>
				<when test="to != null and timeType == 'settleAt'">and settle_at &lt;= #{to}</when>
				<when test="to != null and timeType == 'payAt'">and pay_at &lt;= #{to}</when>
				<when test="to != null and timeType == 'balanceAt'">and balance_at &lt;= #{to}</when>
				<otherwise>and pay_at &lt;= #{to}</otherwise>
			</choose>
			<if test="innId != null">
				and inn_id = #{innId}
			</if>
			<if test="productCode != null and productCode != ''">
				and product_code = #{productCode}
			</if>
			<if test="orderNo != null and orderNo != ''">
				and order_code = #{orderNo}
			</if>
			<if test="tradeNo != null and tradeNo != ''">
				and trade_no = #{tradeNo}
			</if>
			<if test="receiptType != null">
				AND receipt_type = #{receiptType}
			</if>
			<if test="isBalance != null">
				AND is_balance = #{isBalance}
			</if>
		</where>
	</sql>

	<sql id="find_settlement_inn_sql">
		SELECT DISTINCT i.id,i.alipay_code,i.alipay_user,i.tenpay_code,i.tenpay_user,i.bank_type,i.bank_account
		,i.bank_code,i.bank_name,i.bank_region,i.bank_province,i.bank_city,i.name,i.region_id
		FROM tomato_pay_record p
		INNER JOIN tomato_inn i ON p.inn_id = i.id
		<include refid="settlement_filter_sql"/>
	</sql>

	<sql id="find_settlement_pay_record_sql">
		SELECT p.inn_id as pms_inn_id,p.product_code,p.order_code,p.trade_no,p.pay_mode,p.pay_type,p.pay_desc,p.deduct_price
		,p.poundage_ratio,p.commission_ratio,p.pay_price,p.pay_at,p.is_balance,p.id,p.settle_at,p.balance_at
		FROM tomato_pay_record p
		<include refid="settlement_filter_sql"/>
	</sql>

	<sql id="find_settlement_record_sql">
		<include refid="find_settlement_pay_record_sql"/>
		<if test="innIds != null and innIds.size > 0">
			AND p.inn_id IN
			<foreach collection="innIds" item="pmsInnId" index="index"
					 open="(" close=")" separator=",">
				#{pmsInnId}
			</foreach>
		</if>
	</sql>

	<sql id="find_union_statements_sql">
		SELECT u.id,u."name",COUNT(DISTINCT m.pms_inn_id) as innNum,COUNT(m.id) as orderNum,SUM(m.pay_amount) as totalFee,u.commission_ratio as commissionRatio
		,u.poundage_ratio as poundageRatio
		FROM tomato_consumer_main_order m
		INNER JOIN fqfx_union_info u ON u.id = m.union_id
		<where>
			<if test="from != null">
				AND m.check_out_at &gt;= #{from}
			</if>
			<if test="to != null">
				AND m.check_out_at &lt;= #{to}
			</if>
			<if test="unionType != null">
				AND u.type = #{unionType}
			</if>
			<if test="payStatus != null">
				AND m.pay_status = #{payStatus}
			</if>
		</where>
		GROUP BY u.id,u."name"
	</sql>

	<sql id="find_order_statements_sql">
		SELECT m.id,m.inn_name as innName,m.pms_inn_id as pmsInnId,m.ota_order_no as orderNo,m.user_name as userName,m.contact,m.room_type_name as roomTypeName
		,m.room_type_num as roomTypeNum,m.total_price as totalAmount,m.pay_amount as paidAmount,m.commission_percent as commissionRatio
		,m.poundage_ratio as poundageRatio,m.created_at as createdAt,m.check_in_at as checkInAt,m.check_out_at as checkOutAt,i.region_id as regionId
		FROM tomato_consumer_main_order m
		INNER JOIN tomato_inn i ON i.id = m.pms_inn_id
		<where>
			<if test="from != null">
				AND m.check_out_at &gt;= #{from}
			</if>
			<if test="to != null">
				AND m.check_out_at &lt;= #{to}
			</if>
			<if test="unionType != null">
				AND m.type = #{unionType}
			</if>
			<if test="innId != null">
				AND m.pms_inn_id = #{innId}
			</if>
			<if test="unionId != null">
				AND m.union_id = #{unionId}
			</if>
			<if test="payStatus != null">
				AND m.pay_status = #{payStatus}
			</if>
			<if test="orderNo != null and orderNo != ''">
				and m.ota_order_no = #{orderNo}
			</if>
			<if test="innName != null and innName != ''">
				and i.name LIKE '%'||#{innName}||'%'
			</if>
		</where>
	</sql>

	<sql id="count_settle_records_sql">
		SELECT count(p.id) as p1,sum(p.pay_price + p.deduct_price) as p2,sum(p.pay_price) as p3,sum(p.poundage_ratio * p.pay_price) as p4
		,0 as p5,0 as p6,0 as p7,0 as p8
		FROM tomato_pay_record p
		INNER JOIN tomato_inn i ON p.inn_id = i.id
		<include refid="settlement_filter_sql"/>
		UNION ALL
		SELECT 0 as p1,0 as p2,0 as p3,0 as p4
		,count(p.id) as p5,sum(p.pay_price + p.deduct_price) as p6,sum(p.pay_price) as p7,sum(p.poundage_ratio * p.pay_price) as p8
		FROM tomato_pay_record p
		INNER JOIN tomato_inn i ON p.inn_id = i.id
		<include refid="settlement_filter_sql"/>
		AND p.is_balance = 0
	</sql>

	<sql id="count_pay_record_sql">
		SELECT count(p.id) as totalNum,COALESCE(sum(p.pay_price), 0.0) as totalAmount
		FROM tomato_pay_record p
		INNER JOIN tomato_inn i ON p.inn_id = i.id
		<include refid="pay_record_filter_sql"/>
	</sql>

	<sql id="balance_orders_sql">
		UPDATE tomato_pay_record SET is_balance = #{balance},balance_at = #{now}
		<include refid="update_filter_sql"/>
	</sql>

	<sql id="settlement_filter_sql">
		<where>
			<choose>
				<when test="from != null and timeType == 'settleAt'">and p.settle_at &gt;= #{from}</when>
				<when test="from != null and timeType == 'payAt'">and p.pay_at &gt;= #{from}</when>
				<when test="from != null and timeType == 'balanceAt'">and p.balance_at &gt;= #{from}</when>
				<otherwise>and p.settle_at &gt;= #{from}</otherwise>
			</choose>
			<choose>
				<when test="to != null and timeType == 'settleAt'">and p.settle_at &lt;= #{to}</when>
				<when test="to != null and timeType == 'payAt'">and p.pay_at &lt;= #{to}</when>
				<when test="to != null and timeType == 'balanceAt'">and p.balance_at &lt;= #{to}</when>
				<otherwise>and p.settle_at &lt;= #{to}</otherwise>
			</choose>
			<if test="innId != null">
				and p.inn_id = #{innId}
			</if>
			<if test="productCode != null and productCode != ''">
				and p.product_code = #{productCode}
			</if>
			<if test="payType != null and payType != ''">
				and p.pay_type = #{payType}
			</if>
			<if test="orderNo != null and orderNo != ''">
				and p.order_code = #{orderNo}
			</if>
			<if test="tradeNo != null and tradeNo != ''">
				and p.trade_no = #{tradeNo}
			</if>
			<if test="receiptType != null">
				AND p.receipt_type = #{receiptType}
			</if>
			<if test="status != null">  <!-- 防止查询出已经有过退款的支付记录 -->
				AND p.is_balance &gt;= #{status}
			</if>
			<if test="isBalance != null">
				AND p.is_balance = #{isBalance}
			</if>
			<if test="innName != null and innName != ''">
				and i.name LIKE '%'||#{innName}||'%'
			</if>
		</where>
	</sql>

	<resultMap type="com.tomasky.bill.vo.bill.PayRecordVo" id="payRecordMap">
		<result property="id" column="id"/>
		<result property="innName" column="inn_name"/>
		<result property="pmsInnId" column="pms_inn_id"/>
		<result property="productCode" column="product_code"/>
		<result property="orderCode" column="order_code"/>
		<result property="tradeNo" column="trade_no"/>
		<result property="payMode" column="pay_mode"/>
		<result property="payType" column="pay_type"/>
		<result property="payDesc" column="pay_desc"/>
		<result property="deductPrice" column="deduct_price"/>
		<result property="poundageRatio" column="poundage_ratio"/>
		<result property="commissionRatio" column="commission_ratio"/>
		<result property="payPrice" column="pay_price"/>
		<result property="payAt" column="pay_at"/>
		<result property="isBalance" column="is_balance"/>
		<result property="balanceAt" column="balance_at"/>
		<result property="settleAt" column="settle_at"/>
	</resultMap>

	<resultMap type="com.tomasky.bill.vo.bill.InnInfoVo" id="innInfoMap">
		<result property="id" column="id"/>
		<result property="name" column="name"/>
		<result property="alipayCode" column="alipay_code"/>
		<result property="alipayUser" column="alipay_user"/>
		<result property="tenpayCode" column="tenpay_code"/>
		<result property="tenpayUser" column="tenpay_user"/>
		<result property="bankType" column="bank_type"/>
		<result property="bankAccount" column="bank_account"/>
		<result property="bankCode" column="bank_code"/>
		<result property="bankName" column="bank_name"/>
		<result property="bankRegion" column="bank_region"/>
		<result property="bankProvince" column="bank_province"/>
		<result property="bankCity" column="bank_city"/>
	</resultMap>
</mapper>